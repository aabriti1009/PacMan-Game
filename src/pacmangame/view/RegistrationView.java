/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pacmangame.view;

import java.awt.Color;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import pacmangame.Controller.RegistrationController;
import Media.Media;
import Media.EImage;
import javax.swing.JPanel;

/**
 *
 * @author ACER
 */
public class RegistrationView extends javax.swing.JFrame {

    // Add missing fields for password visibility buttons
    private javax.swing.JLabel showPasswordBtn;
    private javax.swing.JLabel showConfirmPasswordBtn;
    // Add controller field
    private RegistrationController registrationController;
   
    /**
     * Creates new form RegistrationView
     */
    public RegistrationView() {
        initComponents();
        
        // Set window size to 1000x600 and center it on screen
        setSize(1000, 600);
        
        setLocationRelativeTo(null);
        
        // Set background color
        getContentPane().setBackground(new Color(135, 206, 235));
        
        // Set transparent backgrounds
        usernametextfield.setBackground(new Color(0,0,0,0));
        emailtextfield.setBackground(new Color(0,0,0,0));
        passwordtextfield.setBackground(new Color(0,0,0,0));
        confirmpasswordtextfield.setBackground(new Color(0,0,0,0));
        
        // Set password fields
        passwordtextfield.setEchoChar('\u0000');  // Initially show placeholder
        confirmpasswordtextfield.setEchoChar('\u0000');  // Initially show placeholder
        
        // Setup show/hide password functionality
        setupPasswordVisibility();
        
        // Setup register button action
        setupRegisterButton();
        
        // Initialize controller
        registrationController = new RegistrationController();
        
        // Set frame icon
        setIconImage(Media.getImg(EImage.logo));
        
        // Make the frame visible
        setVisible(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    private void initComponents() {
        jMenu1 = new javax.swing.JMenu();
        joingame = new javax.swing.JLabel();
        usernametextfield = new javax.swing.JTextField();
        emailtextfield = new javax.swing.JTextField();
        passwordtextfield = new javax.swing.JPasswordField();
        confirmpasswordtextfield = new javax.swing.JPasswordField();
        userimg = new javax.swing.JLabel();
        emailimg = new javax.swing.JLabel();
        passwordimg = new javax.swing.JLabel();
        confirmimg = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        jMenu1.setText("jMenu1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Create Account");
        setPreferredSize(new java.awt.Dimension(1000, 600));
        getContentPane().setLayout(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();

        // Title
        joingame.setFont(new java.awt.Font("Times New Roman", 1, 36));
        joingame.setText("Register");
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 3;
        gbc.insets = new Insets(30, 0, 40, 0);
        gbc.anchor = GridBagConstraints.CENTER;
        getContentPane().add(joingame, gbc);

        gbc.gridwidth = 1;
        gbc.insets = new Insets(10, 10, 10, 10);
        gbc.anchor = GridBagConstraints.EAST;

        // Username row
        userimg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userimg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagepicker/img/profile-user (1) (1).png")));
        gbc.gridx = 0;
        gbc.gridy = 1;
        getContentPane().add(userimg, gbc);

        usernametextfield.setText("Enter Your username");
        usernametextfield.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(30, 144, 255)));
        usernametextfield.setPreferredSize(new java.awt.Dimension(250, 32));
        usernametextfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) { usernamefocus(evt); }
            public void focusLost(java.awt.event.FocusEvent evt) { usernamefocuslost(evt); }
        });
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.CENTER;
        getContentPane().add(usernametextfield, gbc);

        // Email row
        emailimg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emailimg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagepicker/img/email (1).png")));
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.EAST;
        getContentPane().add(emailimg, gbc);

        emailtextfield.setText("Enter Your email");
        emailtextfield.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(30, 144, 255)));
        emailtextfield.setPreferredSize(new java.awt.Dimension(250, 32));
        emailtextfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) { emailfocus(evt); }
            public void focusLost(java.awt.event.FocusEvent evt) { emailfocuslost(evt); }
        });
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.CENTER;
        getContentPane().add(emailtextfield, gbc);

        // Password row
        passwordimg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagepicker/img/lock (1) (1).png")));
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.EAST;
        getContentPane().add(passwordimg, gbc);

        passwordtextfield.setText("Enter your password");
        passwordtextfield.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(30, 144, 255)));
        passwordtextfield.setPreferredSize(new java.awt.Dimension(250, 32));
        passwordtextfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) { passwordfocus(evt); }
            public void focusLost(java.awt.event.FocusEvent evt) { passwordfocuslost(evt); }
        });
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.CENTER;
        getContentPane().add(passwordtextfield, gbc);

        // Eye button for password
        showPasswordBtn = new javax.swing.JLabel();
        showPasswordBtn.setIcon(new javax.swing.ImageIcon(getClass().getClassLoader().getResource("imagepicker/img/show (1).png")));
        showPasswordBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        showPasswordBtn.setPreferredSize(new java.awt.Dimension(20, 20));
        showPasswordBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                if (passwordtextfield.getEchoChar() == '•') {
                    passwordtextfield.setEchoChar('\u0000');
                    showPasswordBtn.setIcon(new javax.swing.ImageIcon(getClass().getClassLoader().getResource("imagepicker/img/hide (1).png")));
                } else {
                    String password = new String(passwordtextfield.getPassword());
                    if (!password.equals("Enter your password")) {
                        passwordtextfield.setEchoChar('•');
                    }
                    showPasswordBtn.setIcon(new javax.swing.ImageIcon(getClass().getClassLoader().getResource("imagepicker/img/show (1).png")));
                }
            }
        });
        gbc.gridx = 2;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        getContentPane().add(showPasswordBtn, gbc);

        // Confirm password row
        confirmimg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagepicker/img/lock (1) (1).png")));
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.EAST;
        getContentPane().add(confirmimg, gbc);

        confirmpasswordtextfield.setText("Confirm your password");
        confirmpasswordtextfield.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(30, 144, 255)));
        confirmpasswordtextfield.setPreferredSize(new java.awt.Dimension(250, 32));
        confirmpasswordtextfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) { confirmpasswordfocus(evt); }
            public void focusLost(java.awt.event.FocusEvent evt) { confirmpasswordfocuslost(evt); }
        });
        gbc.gridx = 1;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.CENTER;
        getContentPane().add(confirmpasswordtextfield, gbc);

        // Eye button for confirm password
        showConfirmPasswordBtn = new javax.swing.JLabel();
        showConfirmPasswordBtn.setIcon(new javax.swing.ImageIcon(getClass().getClassLoader().getResource("imagepicker/img/show (1).png")));
        showConfirmPasswordBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        showConfirmPasswordBtn.setPreferredSize(new java.awt.Dimension(20, 20));
        showConfirmPasswordBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                if (confirmpasswordtextfield.getEchoChar() == '•') {
                    confirmpasswordtextfield.setEchoChar('\u0000');
                    showConfirmPasswordBtn.setIcon(new javax.swing.ImageIcon(getClass().getClassLoader().getResource("imagepicker/img/hide (1).png")));
                } else {
                    String confirmPassword = new String(confirmpasswordtextfield.getPassword());
                    if (!confirmPassword.equals("Confirm your password")) {
                        confirmpasswordtextfield.setEchoChar('•');
                    }
                    showConfirmPasswordBtn.setIcon(new javax.swing.ImageIcon(getClass().getClassLoader().getResource("imagepicker/img/show (1).png")));
                }
            }
        });
        gbc.gridx = 2;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        getContentPane().add(showConfirmPasswordBtn, gbc);

        // Register button
        jButton1.setBackground(new java.awt.Color(255, 255, 0));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 28));
        jButton1.setText("Register");
        jButton1.setPreferredSize(new java.awt.Dimension(200, 50));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) { hover(evt); }
            public void mouseExited(java.awt.event.MouseEvent evt) { hoverlost(evt); }
        });
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.gridwidth = 3;
        gbc.insets = new Insets(40, 0, 10, 0);
        gbc.anchor = GridBagConstraints.CENTER;
        getContentPane().add(jButton1, gbc);
        gbc.gridwidth = 1;
        gbc.insets = new Insets(10, 10, 10, 10);

        // Bottom text
        JPanel bottomPanel = new JPanel();
        bottomPanel.setBackground(new Color(135, 206, 235));
        bottomPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 0));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 16));
        jLabel2.setText("Already Have an Account ? ");
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 16));
        jLabel4.setForeground(new java.awt.Color(51, 51, 255));
        jLabel4.setText("Sign in");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) { signin_click(evt); }
        });
        bottomPanel.add(jLabel2);
        bottomPanel.add(jLabel4);
        gbc.gridx = 0;
        gbc.gridy = 6;
        gbc.gridwidth = 3;
        gbc.insets = new Insets(20, 0, 10, 0);
        gbc.anchor = GridBagConstraints.CENTER;
        getContentPane().add(bottomPanel, gbc);

        pack();
    }

    private void usernamefocus(java.awt.event.FocusEvent evt) {
        if (usernametextfield.getText().equals("Enter Your username")) {
            usernametextfield.setText("");
            usernametextfield.setForeground(Color.black);
        }
    }

    private void usernamefocuslost(java.awt.event.FocusEvent evt) {
        if (usernametextfield.getText().isEmpty()){
            usernametextfield.setText("Enter Your username");
            usernametextfield.setForeground(Color.black);
        }
    }

    private void emailfocus(java.awt.event.FocusEvent evt) {
        if (emailtextfield.getText().equals("Enter Your email")) {
            emailtextfield.setText("");
            emailtextfield.setForeground(Color.black);
        }
    }

    private void emailfocuslost(java.awt.event.FocusEvent evt) {
        if (emailtextfield.getText().isEmpty()){
            emailtextfield.setText("Enter Your email");
            emailtextfield.setForeground(Color.black);
        }
    }

    private void passwordfocus(java.awt.event.FocusEvent evt) {
        String password = new String(passwordtextfield.getPassword());
        if (password.equals("Enter your password")) {
            passwordtextfield.setText("");
            passwordtextfield.setEchoChar('•');
            passwordtextfield.setForeground(Color.black);
            showPasswordBtn.setIcon(new javax.swing.ImageIcon(getClass().getClassLoader().getResource("imagepicker/img/show (1).png")));
        }
    }

    private void passwordfocuslost(java.awt.event.FocusEvent evt) {
        String password = new String(passwordtextfield.getPassword());
        if (password.isEmpty()) {
            passwordtextfield.setEchoChar('\u0000');
            passwordtextfield.setText("Enter your password");
            passwordtextfield.setForeground(Color.black);
            showPasswordBtn.setIcon(new javax.swing.ImageIcon(getClass().getClassLoader().getResource("imagepicker/img/show (1).png")));
        }
    }

    private void confirmpasswordfocus(java.awt.event.FocusEvent evt) {
        String confirmPassword = new String(confirmpasswordtextfield.getPassword());
        if (confirmPassword.equals("Confirm your password")) {
            confirmpasswordtextfield.setText("");
            confirmpasswordtextfield.setEchoChar('•');
            confirmpasswordtextfield.setForeground(Color.black);
            showConfirmPasswordBtn.setIcon(new javax.swing.ImageIcon(getClass().getClassLoader().getResource("imagepicker/img/show (1).png")));
        }
    }

    private void confirmpasswordfocuslost(java.awt.event.FocusEvent evt) {
        String confirmPassword = new String(confirmpasswordtextfield.getPassword());
        if (confirmPassword.isEmpty()) {
            confirmpasswordtextfield.setEchoChar('\u0000');
            confirmpasswordtextfield.setText("Confirm your password");
            confirmpasswordtextfield.setForeground(Color.black);
            showConfirmPasswordBtn.setIcon(new javax.swing.ImageIcon(getClass().getClassLoader().getResource("imagepicker/img/show (1).png")));
        }
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        handleRegisterButtonClick();
    }
    
    private void hover(java.awt.event.MouseEvent evt) {
        jButton1.setBackground(new java.awt.Color(70, 130, 180));
        jButton1.setForeground(Color.WHITE);
    }
    
    private void hoverlost(java.awt.event.MouseEvent evt) {
        jButton1.setBackground(new java.awt.Color(255, 255, 0));
        jButton1.setForeground(Color.BLACK);
    }
    
    private void signin_click(java.awt.event.MouseEvent evt) {
        this.dispose();
        new LoginView().setVisible(true);
    }
    
    private void setupPasswordVisibility() {
        showPasswordBtn = new javax.swing.JLabel();
        showPasswordBtn.setIcon(new javax.swing.ImageIcon(getClass().getClassLoader().getResource("imagepicker/img/show (1).png")));
        showPasswordBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        showPasswordBtn.setPreferredSize(new java.awt.Dimension(20, 20));
        showPasswordBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                togglePasswordVisibility();
            }
        });
        
        showConfirmPasswordBtn = new javax.swing.JLabel();
        showConfirmPasswordBtn.setIcon(new javax.swing.ImageIcon(getClass().getClassLoader().getResource("imagepicker/img/show (1).png")));
        showConfirmPasswordBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        showConfirmPasswordBtn.setPreferredSize(new java.awt.Dimension(20, 20));
        showConfirmPasswordBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                toggleConfirmPasswordVisibility();
            }
        });
        
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.LINE_START;
        gbc.insets = new Insets(0, 5, 0, 0);
        getContentPane().add(showPasswordBtn, gbc);
        
        gbc.gridy = 4;
        getContentPane().add(showConfirmPasswordBtn, gbc);
    }
    
    private void togglePasswordVisibility() {
        if (passwordtextfield.getEchoChar() == '•') {
            passwordtextfield.setEchoChar('\u0000');
            showPasswordBtn.setIcon(new javax.swing.ImageIcon(getClass().getClassLoader().getResource("imagepicker/img/hide (1).png")));
        } else {
            String password = new String(passwordtextfield.getPassword());
            if (!password.equals("Enter your password")) {
                passwordtextfield.setEchoChar('•');
            }
            showPasswordBtn.setIcon(new javax.swing.ImageIcon(getClass().getClassLoader().getResource("imagepicker/img/show (1).png")));
        }
    }
    
    private void toggleConfirmPasswordVisibility() {
        if (confirmpasswordtextfield.getEchoChar() == '•') {
            confirmpasswordtextfield.setEchoChar('\u0000');
            showConfirmPasswordBtn.setIcon(new javax.swing.ImageIcon(getClass().getClassLoader().getResource("imagepicker/img/hide (1).png")));
        } else {
            String confirmPassword = new String(confirmpasswordtextfield.getPassword());
            if (!confirmPassword.equals("Confirm your password")) {
                confirmpasswordtextfield.setEchoChar('•');
            }
            showConfirmPasswordBtn.setIcon(new javax.swing.ImageIcon(getClass().getClassLoader().getResource("imagepicker/img/show (1).png")));
        }
    }
    
    private void setupRegisterButton() {
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                handleRegisterButtonClick();
            }
        });
    }

    private void handleRegisterButtonClick() {
        String username = usernametextfield.getText();
        String email = emailtextfield.getText();
        String password = new String(passwordtextfield.getPassword());
        String confirmPassword = new String(confirmpasswordtextfield.getPassword());

        if (username.equals("Enter Your username") || email.equals("Enter Your email") || password.equals("Enter your password") || confirmPassword.equals("Confirm your password")) {
            javax.swing.JOptionPane.showMessageDialog(this, "Please fill in all fields.", "Registration Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!password.equals(confirmPassword)) {
            javax.swing.JOptionPane.showMessageDialog(this, "Passwords do not match.", "Registration Error", javax.swing.JOptionPane.ERROR_MESSAGE);
            return;
        }

        boolean registrationSuccess = registrationController.registerUser(username, email, password);

        if (registrationSuccess) {
            javax.swing.JOptionPane.showMessageDialog(this, "Registration successful! Please login.", "Success", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
            new LoginView().setVisible(true);
        } else {
            // Error message is shown by the controller
        }
    }

    private void clearForm() {
        usernametextfield.setText("Enter Your username");
        emailtextfield.setText("Enter Your email");
        passwordtextfield.setEchoChar('\u0000');
        passwordtextfield.setText("Enter your password");
        confirmpasswordtextfield.setEchoChar('\u0000');
        confirmpasswordtextfield.setText("Confirm your password");
    }

    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistrationView().setVisible(true);
            }
        });
    }

    private javax.swing.JLabel confirmimg;
    private javax.swing.JPasswordField confirmpasswordtextfield;
    private javax.swing.JLabel emailimg;
    private javax.swing.JTextField emailtextfield;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JLabel joingame;
    private javax.swing.JLabel passwordimg;
    private javax.swing.JPasswordField passwordtextfield;
    private javax.swing.JLabel userimg;
    private javax.swing.JTextField usernametextfield;
}
